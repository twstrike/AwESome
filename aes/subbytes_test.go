package aes

import (
	. "gopkg.in/check.v1"
)

type SubBytesTestSuite struct{}

var _ = Suite(&SubBytesTestSuite{})

func (s *SubBytesTestSuite) TestAffineTransformation(c *C) {
	c.Assert(affineTrans(byte(0x00)), Equals, byte(0x63))
	c.Assert(affineTrans(byte(0xca)), Equals, byte(0xed))
}

func (s *SubBytesTestSuite) TestMe(c *C) {
	oldState := state{
		0x00, 0x11, 0x22, 0x33,
		0x44, 0x55, 0x66, 0x77,
		0x88, 0x99, 0xaa, 0xbb,
		0xcc, 0xdd, 0xee, 0xff,
	}
	newState := state{
		0x63, 0x82, 0x93, 0xc3,
		0x1b, 0xfc, 0x33, 0xf5,
		0xc4, 0xee, 0xac, 0xea,
		0x4b, 0xc1, 0x28, 0x16,
	}

	c.Assert(subBytes(oldState), Equals, newState)
}

func (s *SubBytesTestSuite) TestYou(c *C) {
	oldState := state{
		0xf0, 0xe1, 0xd2, 0xc3,
		0xb4, 0xa5, 0x96, 0x87,
		0x78, 0x69, 0x5a, 0x4b,
		0x3c, 0x2d, 0x1e, 0x0f,
	}
	newState := state{
		0x8c, 0xf8, 0xb5, 0x2e,
		0x8d, 0x06, 0x90, 0x17,
		0xbc, 0xf9, 0xbe, 0xb3,
		0xeb, 0xd8, 0x72, 0x76,
	}

	c.Assert(subBytes(oldState), Equals, newState)
}
